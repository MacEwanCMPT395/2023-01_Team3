using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using DBAuth;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;

namespace UniversitySystem
{
    public partial class CourseSelection : Form
    {
        string course_name_query = @"SELECT DISTINCT SectionID, CourseName, Number, DeptName, Term, Year, Capacity, Enrolled, Day, Time " +
                                     "FROM vw_CourseSectionsDepartments " +
                                     "WHERE CourseName LIKE '{0}%' AND Number LIKE '{1}%' ";



        string department_term_query = @"SELECT DISTINCT SectionID, CourseName, Number, DeptName, Term, Year, Capacity, Enrolled, Day, Time " +
                                     "FROM vw_CourseSectionsDepartments " +
                                     "WHERE DeptName LIKE '{0}%' AND Term LIKE '{1}%' AND Year LIKE '{2}%' ";

        string department_query = @"SELECT DISTINCT SectionID, CourseName, Number, DeptName, Term, Year, Capacity, Enrolled, Day, Time " +
                                     "FROM vw_CourseSectionsDepartments " +
                                     "WHERE DeptName LIKE '{0}%' ";

        string term_query = @"SELECT DISTINCT SectionID, CourseName, Number, DeptName, Term, Year, Capacity, Enrolled, Day, Time " +
                                     "FROM vw_CourseSectionsDepartments " +
                                     "WHERE Term LIKE '{0}%' AND Year LIKE '{1}%' ";

        public CourseSelection()
        {
            InitializeComponent();

            PopulateDropdowns();
            //PopulateTable();
        }

        private void PopulateDropdowns() {
            DepartmentDropdown.Items.Clear();
            TermDropdown.Items.Clear();

            string departments_query = "SELECT DeptName FROM Department";
            string term_query = "SELECT DISTINCT [Term] + ' ' + CAST([Year] AS VARCHAR(4)) AS Term_Year " +
                                "FROM [dbo].[Section] " +
                                "WHERE [Year] >= 2023;";

            SqlDataReader department_result = Program.Database.RunQuery(departments_query);
            

            HashSet<string> Departments = new HashSet<string>();
            HashSet<string> Terms = new HashSet<string>();

            Departments.Add(string.Empty);
            Terms.Add(string.Empty);

            while (department_result.Read()) {
                Departments.Add(department_result["DeptName"].ToString());
            }
            department_result.Close();

            SqlDataReader term_result = Program.Database.RunQuery(term_query);
            

            while (term_result.Read()) {
                Terms.Add(term_result["Term_Year"].ToString());
            }

            term_result.Close();

            foreach (string department in Departments) {
                DepartmentDropdown.Items.Add(department);
            }

            foreach (string term in Terms) {
                TermDropdown.Items.Add(term);
            }

            DepartmentDropdown.Items.RemoveAt(0);
            TermDropdown.Items.RemoveAt(0);

        }

        public bool check_transcript(int studentID)
        {
            // Connect to SQL Server database
            string connectionString = "Server=LAPTOP-KI5F3RA4;Initial Catalog=CMPT_391;Integrated Security=True";
            SqlConnection connection = new SqlConnection(connectionString);
            connection.Open();

            // Get selected row from CourseList DataGridView
            DataGridViewRow selectedRow = CourseList.SelectedRows[0];
            int sectionID = Convert.ToInt32(selectedRow.Cells["SectionID"].Value);
            int year = Convert.ToInt32(selectedRow.Cells["Year"].Value);
            string term = Convert.ToString(selectedRow.Cells["Term"].Value);

            // Check if selected row exists in dbo.Enrollment table
            string query = "SELECT * FROM dbo.Enrollment WHERE StudentID = @studentID AND SectionID = @sectionID AND Section_Year = @year AND Section_Term = @term";
            SqlCommand command = new SqlCommand(query, connection);
            command.Parameters.AddWithValue("@studentID", studentID);
            command.Parameters.AddWithValue("@sectionID", sectionID);
            command.Parameters.AddWithValue("@year", year);
            command.Parameters.AddWithValue("@term", term);
            SqlDataReader reader = command.ExecuteReader();

            // Return True if selected row exists in dbo.Enrollment table, otherwise False
            if (reader.HasRows)
            {
                connection.Close();
                return true;
            }
            else
            {
                connection.Close();
                return false;
            }
        }


        private void PopulateTable() {

           

            string term = null;
            string year = null;


            if (!string.IsNullOrEmpty(course_search_txt.Text) || !string.IsNullOrEmpty(course_number_text.Text))
                {
                string formatted_table_query = string.Format(course_name_query, course_search_txt.Text, course_number_text.Text);
                Program.Database.PopulateTable(formatted_table_query, CourseList);
                
            }
            else if (DepartmentDropdown.SelectedIndex >= 0)
            {
                if (TermDropdown.SelectedIndex >= 0 && !(TermDropdown.SelectedItem.ToString() == ""))
                {
                    string selectedItem = TermDropdown.SelectedItem.ToString();

                    term = selectedItem.Split(' ')[0];
                    year = selectedItem.Split(' ')[1];

                    string formatted_table_query = string.Format(department_term_query, DepartmentDropdown.SelectedItem.ToString(),
                                                    term, year);
                    Program.Database.PopulateTable(formatted_table_query, CourseList);
                    
                }

                else
                {
                    string formatted_table_query = string.Format(department_query, DepartmentDropdown.SelectedItem.ToString());
                    Program.Database.PopulateTable(formatted_table_query, CourseList);
                    
                }

            }
            else
            {
                string selectedItem = TermDropdown.SelectedItem.ToString();

                term = selectedItem.Split(' ')[0];
                year = selectedItem.Split(' ')[1];

                string formatted_table_query = string.Format(term_query, term, year);
                Program.Database.PopulateTable(formatted_table_query, CourseList);
                
            }
            

            

        }

        private void or_label_Click(object sender, EventArgs e)
        {

        }

        private void course_list_SelectedIndexChanged(object sender, EventArgs e)
        {

        }



        private void search_label_Click(object sender, EventArgs e)
        {

        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void searchButton_Click(object sender, EventArgs e)
        {
            if ((string.IsNullOrEmpty(course_search_txt.Text) && string.IsNullOrEmpty(course_number_text.Text)) && (
        DepartmentDropdown.SelectedIndex == -1 && TermDropdown.SelectedIndex == -1))
            {
                MessageBox.Show("Please enter a value for either the Course Name or Course Number, or make a selection from either the Department or Term dropdown.", "Empty Input", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {
                PopulateTable();
            }
        }

        private void CourseList_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void continue_button_Click(object sender, EventArgs e)
        {
            int studentID = 10;

            if (CourseList.SelectedRows.Count > 0)
            {
                bool found = check_transcript(studentID);
                if (found)
                {
                    MessageBox.Show("Current Student already registered for selected Section", "Enrollment Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                else
                {
                    MessageBox.Show("Section added to Course Management Screen ", "Success", MessageBoxButtons.OK, MessageBoxIcon.Error);

                }
            }
            else
            {
                MessageBox.Show("Please select a course from the list.", "Selection Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

        }

        private void course_search_txt_TextChanged(object sender, EventArgs e)
        {

        }
    }
}
